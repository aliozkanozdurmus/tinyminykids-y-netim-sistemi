# Backend build stage
FROM node:18-alpine AS build
WORKDIR /app
COPY backend/package.json ./
RUN npm install
COPY backend .
RUN npx prisma generate
RUN npm run build

# Backend runtime stage
FROM node:18-alpine
WORKDIR /app
COPY --from=build /app/dist ./dist
COPY --from=build /app/node_modules ./node_modules
COPY backend/.env.example .env
COPY backend/.env.example .env
# Remove any accidental host node_modules
RUN rm -rf ./node_modules
# Copy package.json so npm can install dependencies inside runtime container
COPY backend/package.json ./
# Copy prisma schema so client can be generated
COPY backend/prisma ./prisma
# Install build tools for native modules
RUN apk add --no-cache python3 make g++
# Install dependencies for correct OS/arch
RUN npm install --production
# Generate Prisma client for runtime
RUN npx prisma generate
# Run migrations before starting server
EXPOSE 3000
CMD npx prisma migrate deploy && node dist/app.js